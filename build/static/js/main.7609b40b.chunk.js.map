{"version":3,"sources":["store/hooks.js","components/Messages.jsx","store/messagesSlice.js","consts.js","components/ChatCard.jsx","components/Header.jsx","components/UserLogin.jsx","store/usersSlice.js","App.jsx","reportWebVitals.js","store/index.js","index.js"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","Messages","_ref","userId","messages","state","messagesEndRef","useRef","useEffect","current","scrollIntoView","behavior","React","createElement","className","map","message","Message","key","id","messageItem","ref","_ref2","Fragment","concat","Avatar","sx","width","height","margin","aria-label","PersonIcon","userName","time","messagesSlice","createSlice","name","initialState","reducers","addMessage","action","push","payload","removeMessage","filter","_messagesSlice$action","actions","messagesReducer","reducer","excludedActions","persistConfig","storage","styles","cardStyle","overflow","cardContentStyle","background","blue","overflowY","marginRight","bgGradient","green","color","grey","ChatCard","user","dispatch","_useState","useState","_useState2","_slicedToArray","setMessage","Card","style","CardHeader","avatar","bgcolor","title","CardContent","CardActions","disableSpacing","TextField","hiddenLabel","variant","size","multiline","placeholder","value","onChange","e","target","Button","onClick","trim","date","Date","newMessage","uid","getHours","getMinutes","SendIcon","Header","UserLogin","handleLogin","setName","minWidth","Typography","textAlign","gutterBottom","label","usersSlice","addUser","usersReducer","App","users","isLoggedIn","setIsLoggedIn","_useState3","_useState4","setUser","find","requestedUser","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","createStateSyncMiddleware","blacklist","initMessageListener","ReactDOM","createRoot","document","getElementById","render","StrictMode","Provider","PersistGate","loading","persistor","persistStore"],"mappings":"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","file":"static/js/main.7609b40b.chunk.js","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport const useAppDispatch = useDispatch;\r\nexport const useAppSelector = useSelector;","import React, { useEffect, useRef } from \"react\";\r\nimport \"../styles/MessageCard.css\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport { useAppSelector } from \"../store/hooks\";\r\n\r\nexport const Messages = ({ userId }) => {\r\n  const { messages } = useAppSelector((state) => state);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    if (messagesEndRef && messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"messages-card\">\r\n      {messages.map((message) => (\r\n        <Message key={message.id} messageItem={message} userId={userId} />\r\n      ))}\r\n      <div ref={messagesEndRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Message = ({ messageItem, userId }) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className={`message-box ${\r\n          messageItem.userId === userId\r\n            ? \"message-box-right\"\r\n            : \"message-box-left\"\r\n        }`}\r\n      >\r\n        <Avatar\r\n          sx={{ width: 24, height: 24, margin: \"10px 3px\" }}\r\n          aria-label=\"current-user\"\r\n        >\r\n          <PersonIcon />\r\n        </Avatar>\r\n        <div>\r\n          <div className=\"username\">{messageItem.userName}</div>\r\n          <div className=\"message\">\r\n            <div className=\"message-text\">{messageItem.message}</div>\r\n            <div className=\"message-time\">{messageItem.time}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [];\r\n\r\nconst messagesSlice = createSlice({\r\n  name: \"messages\",\r\n  initialState,\r\n  reducers: {\r\n    addMessage(state, action) {\r\n      state.push(action.payload);\r\n    },\r\n    removeMessage(state, action) {\r\n      return state.filter((message) => message.id !== action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addMessage, removeMessage } = messagesSlice.actions;\r\nexport const messagesReducer = messagesSlice.reducer;","import storage from \"redux-persist/lib/storage\";\r\nimport { blue, green, grey } from \"@mui/material/colors\";\r\n\r\nexport const excludedActions = [\"persist/PERSIST\", \"persist/REHYDRATE\"];\r\n\r\nexport const persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nexport const styles = {\r\n  cardStyle: {\r\n    overflow: \"hidden\",\r\n  },\r\n  cardContentStyle: {\r\n    background: blue[50],\r\n    height: \"400px\",\r\n    overflowY: \"auto\",\r\n    marginRight: \"-15px\",\r\n  },\r\n  bgGradient: {\r\n    background: `linear-gradient(to right, ${green[400]}, ${blue[300]})`,\r\n    color: grey[100],\r\n  },\r\n};","import React, { useState } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  TextField,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Card,\r\n} from \"@mui/material\";\r\nimport { blue, grey } from \"@mui/material/colors\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport { Messages } from \"./Messages\";\r\nimport { v4 as uid } from \"uuid\";\r\nimport { useAppDispatch } from \"../store/hooks\";\r\nimport { addMessage } from \"../store/messagesSlice\";\r\nimport { styles } from \"../consts\";\r\n\r\nexport const ChatCard = ({ user }) => {\r\n  const dispatch = useAppDispatch();\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const postMessage = () => {\r\n    if (message.trim() !== \"\") {\r\n      const date = new Date();\r\n      const newMessage = {\r\n        id: uid(),\r\n        message: message.trim(),\r\n        userId: user.id,\r\n        userName: user.name,\r\n        time: `${date.getHours()}:${date.getMinutes()}`,\r\n      };\r\n      dispatch(addMessage(newMessage));\r\n    }\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ width: \"25rem\" }} style={styles.cardStyle}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar sx={{ bgcolor: blue[500] }} aria-label=\"current-user\">\r\n            <PersonIcon />\r\n          </Avatar>\r\n        }\r\n        title={user.name}\r\n        style={styles.bgGradient}\r\n      />\r\n      <CardContent style={styles.cardContentStyle}>\r\n        <Messages userId={user.id} />\r\n      </CardContent>\r\n      <CardActions disableSpacing style={{ background: grey[50] }}>\r\n        <TextField\r\n          hiddenLabel\r\n          id=\"filled-hidden-label-small\"\r\n          variant=\"standard\"\r\n          size=\"small\"\r\n          multiline\r\n          sx={{ width: \"20rem\" }}\r\n          placeholder=\"Message\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n        />\r\n        <Button aria-label=\"send-message\" onClick={postMessage}>\r\n          <SendIcon />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Simple Chat App</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nexport const UserLogin = ({ handleLogin }) => {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  return (\r\n    <Card sx={{ minWidth: 275 }}>\r\n      <CardContent>\r\n        <Typography variant=\"h4\" textAlign=\"center\" gutterBottom>\r\n          Login in\r\n        </Typography>\r\n        <TextField\r\n          label=\"username\"\r\n          placeholder=\"enter username\"\r\n          size=\"small\"\r\n          style={{ margin: \"10px\" }}\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <br />\r\n        <Button\r\n          variant=\"contained\"\r\n          style={{ margin: \"10px\" }}\r\n          onClick={() => handleLogin(name)}\r\n        >\r\n          Join chat\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [];\r\n\r\nconst usersSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {\r\n    addUser(state, action) {\r\n      state.push(action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addUser } = usersSlice.actions;\r\nexport const usersReducer = usersSlice.reducer;","import React, { useState } from \"react\";\r\nimport { ChatCard } from \"./components/ChatCard\";\r\nimport Header from \"./components/Header\";\r\nimport { UserLogin } from \"./components/UserLogin\";\r\nimport { useAppDispatch, useAppSelector } from \"./store/hooks\";\r\nimport \"./styles/App.css\";\r\nimport { v4 as uid } from \"uuid\";\r\nimport { addUser } from \"./store/usersSlice\";\r\n\r\nfunction App() {\r\n  const dispatch = useAppDispatch();\r\n  const { users } = useAppSelector((state) => state);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [user, setUser] = useState({});\r\n\r\n  const handleLogin = (name) => {\r\n    if (name.trim() !== \"\") {\r\n      const user = users.find((user) => user.name === name);\r\n      let requestedUser = { name };\r\n\r\n      if (user) {\r\n        requestedUser.id = user.id;\r\n      } else {\r\n        requestedUser.id = uid();\r\n        dispatch(addUser(requestedUser));\r\n      }\r\n      setUser(requestedUser);\r\n      setIsLoggedIn(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <div className=\"container\">\r\n        {isLoggedIn ? (\r\n          <ChatCard user={user} />\r\n        ) : (\r\n          <UserLogin handleLogin={handleLogin} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n        getCLS(onPerfEntry);\r\n        getFID(onPerfEntry);\r\n        getFCP(onPerfEntry);\r\n        getLCP(onPerfEntry);\r\n        getTTFB(onPerfEntry);\r\n      });\r\n    }\r\n  };\r\n  \r\n  export default reportWebVitals;\r\n  ","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport { messagesReducer } from \"./messagesSlice\";\r\nimport { usersReducer } from \"./usersSlice\";\r\nimport {\r\n  createStateSyncMiddleware,\r\n  initMessageListener,\r\n} from \"redux-state-sync\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport { excludedActions, persistConfig } from \"../consts\";\r\n\r\nconst rootReducer = combineReducers({\r\n  users: usersReducer,\r\n  messages: messagesReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({ serializableCheck: false }).concat(\r\n      createStateSyncMiddleware({\r\n        blacklist: excludedActions,\r\n      })\r\n    ),\r\n});\r\n\r\ninitMessageListener(store);\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./styles/index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistStore(store)}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}